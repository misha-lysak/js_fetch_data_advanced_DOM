{"version":3,"sources":["scripts/main.js"],"names":["urls","getAllSuccessfulDetails","Promise","resolve","reject","fetch","then","response","json","all","map","item","id","renderingDomForAllPhones","dataFromServer","div","document","createElement","classList","add","insertAdjacentHTML","phone","toUpperCase","join","body","append","getFirstReceivedDetails","race","renderingDomForFirstPhone","url"],"mappings":";AAAA,aAEA,IAAMA,EACF,wEAEEC,EAA0B,WACvB,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAC3BC,MAAML,GACHM,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAC1BF,KAAK,SAAAC,GAAYL,OAAAA,QAAQO,IAAIF,KAC7BD,KAAK,SAAAC,GAAYJ,OAAAA,EAAQI,EAASG,IAAI,SAAAC,GAAQA,OAAAA,EAAKC,WAIpDC,EAA2B,SAACC,GAC1BC,IAAAA,EAAMC,SAASC,cAAc,OAEnCF,EAAIG,UAAUC,IAAI,kBAElBJ,EAAIK,mBAAmB,aAGjBN,kDAAAA,OAAAA,EAAeJ,IAAI,SAAAW,GAChBA,MAAAA,OAAAA,OAAAA,EAAMC,cADe,WAE5BC,KAAK,KALP,oBASAP,SAASQ,KAAKC,OAAOV,IAGjBW,EAA0B,WACvB,OAAA,IAAIxB,QAAQ,SAACC,EAASC,GAC3BC,MAAML,GACHM,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAC1BF,KAAK,SAAAC,GAAYL,OAAAA,QAAQyB,KAAKpB,KAC9BD,KAAK,SAAAC,GAAYJ,OAAAA,EAAQI,EAASK,SAInCgB,EAA4B,SAACC,GAC3Bd,IAAAA,EAAMC,SAASC,cAAc,OAEnCF,EAAIG,UAAUC,IAAI,kBAElBJ,EAAIK,mBAAmB,aAGbS,sDAAAA,OAAAA,EAHV,yBAOAb,SAASQ,KAAKC,OAAOV,IAGvBd,IACGK,KAAKO,GAERa,IACGpB,KAAKsB","file":"main.b6526c94.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst urls\n  = 'https://mate-academy.github.io/phone-catalogue-static/api/phones.json';\n\nconst getAllSuccessfulDetails = () => {\n  return new Promise((resolve, reject) => {\n    fetch(urls)\n      .then(response => response.json())\n      .then(response => Promise.all(response))\n      .then(response => resolve(response.map(item => item.id)));\n  });\n};\n\nconst renderingDomForAllPhones = (dataFromServer) => {\n  const div = document.createElement('div');\n\n  div.classList.add('all-successful');\n\n  div.insertAdjacentHTML('afterbegin', `\n    <h3>All Successful</h3>\n    <ul>\n      ${dataFromServer.map(phone => (\n    `<li>${phone.toUpperCase()}</li>`)\n  ).join(' ')}\n    </ul>\n  `);\n\n  document.body.append(div);\n};\n\nconst getFirstReceivedDetails = () => {\n  return new Promise((resolve, reject) => {\n    fetch(urls)\n      .then(response => response.json())\n      .then(response => Promise.race(response))\n      .then(response => resolve(response.id));\n  });\n};\n\nconst renderingDomForFirstPhone = (url) => {\n  const div = document.createElement('div');\n\n  div.classList.add('first-received');\n\n  div.insertAdjacentHTML('afterbegin', `\n    <h3>First Received</h3>\n    <ul>\n      <li>${url}</li>\n    </ul>\n  `);\n\n  document.body.append(div);\n};\n\ngetAllSuccessfulDetails()\n  .then(renderingDomForAllPhones);\n\ngetFirstReceivedDetails()\n  .then(renderingDomForFirstPhone);\n"]}